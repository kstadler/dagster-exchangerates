version: "3.7"

services:
  # This service runs the postgres DB used by dagster for run storage, schedule storage,
  # and event log storage.
  docker_exchangerates_postgresql:
    image: postgres:11
    container_name: docker_exchangerates_postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres_user"
      POSTGRES_PASSWORD: "postgres_password"
      POSTGRES_DB: "postgres_db"
    networks:
      - docker_exchangerates_network

  # This service runs the gRPC server that loads and executes your pipelines, in both dagit
  # and dagster-daemon. By setting DAGSTER_CURRENT_IMAGE to its own image, we tell the
  # run launcher to use this same image when launching runs in a new container as well.
  # Multiple containers like this can be deployed separately - each just needs to run on
  # its own port, and have its own entry in the workspace.yaml file that's loaded by dagit.
  docker_exchangerates_pipelines:
    build:
      context: ..
      dockerfile: docker/pipelines.Dockerfile
      args:
        - DAGSTER_VERSION=0.10.1
        - BASE_IMAGE=python:3.8.7-slim
    container_name: docker_exchangerates_pipelines
    ports:
      - "4000:4000"
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
      DAGSTER_CURRENT_IMAGE: "${COMPOSE_PROJECT_NAME}_docker_exchangerates_pipelines"
    networks:
      - docker_exchangerates_network

  # This service runs dagit, which loads the pipelines from the user code container.
  # Since our instance uses the QueuedRunCoordinator, any runs submitted from dagit will be put on
  # a queue and later dequeued and launched by dagster-daemon.
  docker_exchangerates_dagit:
    build:
      context: ..
      dockerfile: docker/dagster.Dockerfile
      args:
        - DAGSTER_VERSION=0.10.1
        - BASE_IMAGE=python:3.8.7-slim
    entrypoint:
      - dagit
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - workspace.yaml
    container_name: docker_exchangerates_dagit
    expose:
      - "3000"
    ports:
      - "3000:3000"
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    networks:
      - docker_exchangerates_network
    depends_on:
      - docker_exchangerates_postgresql
      - docker_exchangerates_pipelines

  # This service runs the dagster-daemon process, which is responsible for taking runs
  # off of the queue and launching them, as well as creating runs from schedules or sensors.
  docker_exchangerates_daemon:
    build:
      context: ..
      dockerfile: docker/dagster.Dockerfile
      args:
        - DAGSTER_VERSION=0.10.1
        - BASE_IMAGE=python:3.8.7-slim
    entrypoint:
      - dagster-daemon
      - run
    container_name: docker_exchangerates_daemon
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    volumes: # Make docker client accessible so we can launch containers using host docker
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - docker_exchangerates_network
    depends_on:
      - docker_exchangerates_postgresql
      - docker_exchangerates_pipelines

networks:
  docker_exchangerates_network:
    driver: bridge
    name: docker_exchangerates_network
